# Before you change anything in this file get an idea what it does and read
# - https://about.gitlab.com/blog/2020/12/10/basics-of-gitlab-ci-updated/
# - artifacts https://docs.gitlab.com/ee/ci/jobs/job_artifacts.html

stages:
  - docker-image
  - build
  - test
  - publish

# Jobs

# build docker image for all other jobs -- do not change anything here
# see https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
# if you do not need mkdocs consider using one of the the following images
# registry.gitlab.com/famedly/containers/flutter-dockerimages:stable
# cirrusci/flutter
docker-image:
  stage: docker-image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo update container image ${CI_REGISTRY_IMAGE}/project_builder:latest
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/project_builder:latest"
  rules:
    - changes:
        - Dockerfile

build-web-app:
  stage: build
  image:
    name: ${CI_REGISTRY_IMAGE}/project_builder:latest
  before_script:
    - cd app
    - flutter clean
    - flutter doctor
    - flutter upgrade --force
    - flutter config --enable-web
    - flutter pub get
  script:
    - flutter build web --base-href /app/
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  artifacts:
    paths:
      - app/build/web

build-apk:
  stage: build
  image:
    name: ${CI_REGISTRY_IMAGE}/project_builder:latest
  before_script:
    - cd app
    - flutter clean
    - flutter doctor
    - flutter upgrade --force
    - flutter pub get
  script:
    - flutter build apk --release
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - app/**/*
      allow_failure: true
  artifacts:
    paths:
      - app/build/app/outputs/flutter-apk/app-release.apk

# build-ios: access requested, could not be tested!, as it is suggested by docs
# stage: build
#tags:
#  - saas-macos-medium-m1
# image: macos-12-xcode-14 # check available images in settings ci
# before_script:
#  - cd app
#  - flutter pub get
# script:
#- flutter build ios --no-codesign
#- fastlane build

build-mkdocs:
  stage: build
  image:
    name: ${CI_REGISTRY_IMAGE}/project_builder:latest
  before_script:
    - mkdocs --version
  script:
    - mkdocs build --strict --verbose
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  artifacts:
    paths:
      - public/docs

# see https://pub.dev/packages/flutter_analyze_reporter/example
code-quality:
  stage: test
  image:
    name: ${CI_REGISTRY_IMAGE}/project_builder:latest
  before_script:
    - cd app
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
  script:
    - flutter pub get
    - flutter analyze
    - dart pub global activate flutter_analyze_reporter
    - flutter_analyze_reporter --output report.json --reporter gitlab
  rules:
    - changes:
        - app/**/*
      allow_failure: true
  artifacts:
    reports:
      codequality: app/report.json

riverpod:
  stage: test
  image:
    name: ${CI_REGISTRY_IMAGE}/project_builder:latest
  before_script:
    - cd app
  script:
    - flutter pub get
    - dart run custom_lint
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - app/**/*
  allow_failure: true

# see https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Flutter.gitlab-ci.yml
# not active at the moment, no tests implemented in final version
# see example in https://gitlab.com/utrapp/learning-flutter/-/blob/v0.0.3/app/test/widget_test.dart
# tests:
#   stage: test
#   image:
#     name: ${CI_REGISTRY_IMAGE}/project_builder:latest
#   before_script:
#     - cd app
#     - flutter pub global activate junitreport
#     - export PATH="$PATH":"$HOME/.pub-cache/bin"
#   script:
#     - flutter pub get
#     - flutter test --machine | tojunit -o report.xml
#   artifacts:
#     reports:
#       junit: app/report.xml
#   rules:
#   - if: $CI_COMMIT_BRANCH == "main"
#     changes:
#       - app/**/*
#   allow_failure: true

pages:
  stage: publish
  script:
    # copy the web-app to public only if it exists, i.e. app/build/web/index.html exists (test: https://linuxhandbook.com/bash-test-command/)
    - test -f app/build/web/index.html && cp -r -v app/build/web public/app || true
  needs:
    - job: build-mkdocs
    - job: build-web-app
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  artifacts:
    paths:
      - public
